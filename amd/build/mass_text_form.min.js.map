{"version":3,"file":"mass_text_form.min.js","sources":["../src/mass_text_form.js"],"sourcesContent":["// This file is part of FLIP Plugins for Moodle\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Mass text form JavaScript functionality.\n *\n * @module     local_equipment/mass_text_form\n * @copyright  2025 onwards Joshua Kirby <josh@funlearningcompany.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/log'], function (\n    $,\n    Ajax,\n    Notification,\n    Log\n) {\n    'use strict';\n\n    /**\n     * Initialize the mass text form functionality.\n     *\n     * @return {void}\n     */\n    const init = function () {\n        const messageTextarea = $('#id_message');\n        const charCountDisplay = $('#char-counter');\n        const recipientCountDisplay = $('#recipient-count');\n        const formElement = $('#mass-text-form'); // More specific form selector\n\n        // Get max length from data attribute or use default\n        const maxLength = parseInt(messageTextarea.data('max-length')) || 250;\n\n        // Safety check - ensure required elements exist\n        if (!messageTextarea.length || !charCountDisplay.length) {\n            Log.debug(\n                'local_equipment/mass_text_form: Required elements not found'\n            );\n            return;\n        }\n\n        /**\n         * Update character count display with proper string replacement.\n         *\n         * @return {void}\n         */\n        const updateCharCount = function () {\n            const currentLength = messageTextarea.val().length;\n            const remaining = maxLength - currentLength;\n\n            // Update the character count text properly\n            if (remaining >= 0) {\n                charCountDisplay.text(remaining + ' characters remaining');\n            } else {\n                charCountDisplay.text(\n                    Math.abs(remaining) + ' characters over limit'\n                );\n            }\n\n            // Update styling based on remaining characters\n            if (remaining < 0) {\n                charCountDisplay\n                    .removeClass('text-warning text-muted')\n                    .addClass('text-danger');\n            } else if (remaining < 20) {\n                charCountDisplay\n                    .removeClass('text-muted text-danger')\n                    .addClass('text-warning');\n            } else {\n                charCountDisplay\n                    .removeClass('text-danger text-warning')\n                    .addClass('text-muted');\n            }\n        };\n\n        /**\n         * Load recipient count via AJAX using Moodle web services.\n         *\n         * @return {void}\n         */\n        const loadRecipientCount = function () {\n            Ajax.call([\n                {\n                    methodname: 'local_equipment_get_recipient_count',\n                    args: {},\n                    done: function (response) {\n                        Log.debug('Web service response:', response); // DEBUG: See what we get back\n\n                        if (response.success) {\n                            recipientCountDisplay.text(\n                                response.count + ' parents'\n                            );\n\n                            // Update styling based on count\n                            if (response.count === 0) {\n                                recipientCountDisplay\n                                    .removeClass('text-success')\n                                    .addClass('text-warning');\n                            } else {\n                                recipientCountDisplay\n                                    .removeClass('text-warning')\n                                    .addClass('text-success');\n                            }\n                        } else {\n                            recipientCountDisplay.text('Error loading count');\n                            recipientCountDisplay\n                                .removeClass('text-success text-warning')\n                                .addClass('text-danger');\n\n                            Log.error(\n                                'local_equipment/mass_text_form: Recipient count error: ' +\n                                    response.error\n                            );\n                        }\n                    },\n                    fail: function (error) {\n                        Log.debug('Web service error details:', error); // DEBUG: See exact error\n\n                        recipientCountDisplay.text('Error loading count');\n                        recipientCountDisplay\n                            .removeClass('text-success text-warning')\n                            .addClass('text-danger');\n\n                        Log.error(\n                            'local_equipment/mass_text_form: Web service error loading recipient count: ' +\n                                (error.message || 'Unknown error')\n                        );\n                    },\n                },\n            ]);\n        };\n\n        /**\n         * Handle form submission with validation.\n         *\n         * @param {Event} e - The form submission event\n         * @return {boolean} - Whether to allow form submission\n         */\n        const handleFormSubmit = function (e) {\n            const message = messageTextarea.val().trim();\n\n            if (message.length === 0) {\n                e.preventDefault();\n                Notification.addNotification({\n                    message: 'Please enter a message',\n                    type: 'error',\n                });\n                return false;\n            }\n\n            if (message.length > maxLength) {\n                e.preventDefault();\n                Notification.addNotification({\n                    message:\n                        'Message is too long. Maximum ' +\n                        maxLength +\n                        ' characters allowed',\n                    type: 'error',\n                });\n                return false;\n            }\n\n            // Show confirmation dialog\n            if (\n                !confirm(\n                    'Are you sure you want to send this message to all parents?'\n                )\n            ) {\n                e.preventDefault();\n                return false;\n            }\n\n            return true;\n        };\n\n        // Initialize functionality\n        messageTextarea.on('input keyup paste', updateCharCount);\n        updateCharCount(); // Initial character count\n\n        if (recipientCountDisplay.length) {\n            loadRecipientCount();\n        }\n\n        // Bind form submission handler to specific form\n        if (formElement.length) {\n            formElement.on('submit', handleFormSubmit);\n        } else {\n            // Fallback to any form if specific form not found\n            $('form').on('submit', handleFormSubmit);\n            Log.debug(\n                'local_equipment/mass_text_form: Using fallback form selector'\n            );\n        }\n    };\n\n    return {\n        init: init,\n    };\n});\n"],"names":["define","$","Ajax","Notification","Log","init","messageTextarea","charCountDisplay","recipientCountDisplay","formElement","maxLength","parseInt","data","length","debug","updateCharCount","currentLength","val","remaining","text","Math","abs","removeClass","addClass","handleFormSubmit","e","message","trim","preventDefault","addNotification","type","confirm","on","call","methodname","args","done","response","success","count","error","fail"],"mappings":";;;;;;;AAuBAA,wCAAO,CAAC,SAAU,YAAa,oBAAqB,aAAa,SAC7DC,EACAC,KACAC,aACAC,WAoLO,CACHC,KA5KS,iBACHC,gBAAkBL,EAAE,eACpBM,iBAAmBN,EAAE,iBACrBO,sBAAwBP,EAAE,oBAC1BQ,YAAcR,EAAE,mBAGhBS,UAAYC,SAASL,gBAAgBM,KAAK,gBAAkB,QAG7DN,gBAAgBO,SAAWN,iBAAiBM,mBAC7CT,IAAIU,MACA,qEAUFC,gBAAkB,iBACdC,cAAgBV,gBAAgBW,MAAMJ,OACtCK,UAAYR,UAAYM,cAG1BE,WAAa,EACbX,iBAAiBY,KAAKD,UAAY,yBAElCX,iBAAiBY,KACbC,KAAKC,IAAIH,WAAa,0BAK1BA,UAAY,EACZX,iBACKe,YAAY,2BACZC,SAAS,eACPL,UAAY,GACnBX,iBACKe,YAAY,0BACZC,SAAS,gBAEdhB,iBACKe,YAAY,4BACZC,SAAS,eAmEhBC,iBAAmB,SAAUC,SACzBC,QAAUpB,gBAAgBW,MAAMU,cAEf,IAAnBD,QAAQb,QACRY,EAAEG,iBACFzB,aAAa0B,gBAAgB,CACzBH,QAAS,yBACTI,KAAM,WAEH,GAGPJ,QAAQb,OAASH,WACjBe,EAAEG,iBACFzB,aAAa0B,gBAAgB,CACzBH,QACI,gCACAhB,UACA,sBACJoB,KAAM,WAEH,KAKNC,QACG,gEAGJN,EAAEG,kBACK,IAOftB,gBAAgB0B,GAAG,oBAAqBjB,iBACxCA,kBAEIP,sBAAsBK,QAlGtBX,KAAK+B,KAAK,CACN,CACIC,WAAY,sCACZC,KAAM,GACNC,KAAM,SAAUC,UACZjC,IAAIU,MAAM,wBAAyBuB,UAE/BA,SAASC,SACT9B,sBAAsBW,KAClBkB,SAASE,MAAQ,YAIE,IAAnBF,SAASE,MACT/B,sBACKc,YAAY,gBACZC,SAAS,gBAEdf,sBACKc,YAAY,gBACZC,SAAS,kBAGlBf,sBAAsBW,KAAK,uBAC3BX,sBACKc,YAAY,6BACZC,SAAS,eAEdnB,IAAIoC,MACA,0DACIH,SAASG,SAIzBC,KAAM,SAAUD,OACZpC,IAAIU,MAAM,6BAA8B0B,OAExChC,sBAAsBW,KAAK,uBAC3BX,sBACKc,YAAY,6BACZC,SAAS,eAEdnB,IAAIoC,MACA,+EACKA,MAAMd,SAAW,sBA2DtCjB,YAAYI,OACZJ,YAAYuB,GAAG,SAAUR,mBAGzBvB,EAAE,QAAQ+B,GAAG,SAAUR,kBACvBpB,IAAIU,MACA"}