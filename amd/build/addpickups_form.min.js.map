{"version":3,"file":"addpickups_form.min.js","sources":["../src/addpickups_form.js"],"sourcesContent":["// This file is part of FLIP Plugins for Moodle\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * JavaScript for deleting pickups in the add pickups form.\n *\n * @module      local_equipment/addpickups_form\n * @copyright   2024 onward Joshua Kirby <josh@funlearningcompany.com>\n * @author      Joshua Kirby - CTO @ Fun Learning Company - funlearningcompany.com\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nM.util.js_pending(\"local_equipment/addpickups_form\");\n\ndefine([\"jquery\", \"core/log\", \"core/str\"], ($, log, Str) => {\n    return {\n        init: () => {\n            $(document).ready(function () {\n                const selector = \"fieldset[id^='id_pickupheader_']\";\n                log.debug(\"Add Pickup Form JS initialized\");\n\n                const updatePickupNumbers = () => {\n                    log.debug(\"updatePickupNumbers\");\n                    $(\".local-equipment-pickup-header\").each(\n                        (index, element) => {\n                            Str.get_string(\n                                \"pickup\",\n                                \"local_equipment\",\n                                index + 1\n                            )\n                                .then((string) => {\n                                    $(element).text(string);\n                                })\n                                .catch((error) => {\n                                    log.error(\n                                        \"Error updating pickup header:\",\n                                        error\n                                    );\n                                });\n                        }\n                    );\n                };\n\n                const updateHiddenFields = () => {\n                    log.debug(\"updateHiddenFields\");\n                    const pickupsCount = $(selector).length;\n                    log.debug(`Number of fieldsets: ${pickupsCount}`);\n                    $('input[name=\"pickups\"]').val(pickupsCount);\n\n                    // Update the URL if necessary\n                    const url = new URL(window.location.href);\n                    url.searchParams.set(\"repeatno\", pickupsCount);\n                    window.history.replaceState({}, \"\", url);\n                };\n\n                const renumberFormElements = () => {\n                    log.debug(\"renumberFormElements\");\n                    $(selector).each((index, fieldset) => {\n                        log.debug(`Renumbering fieldset ${index}`);\n                        $(fieldset)\n                            .find(\"input, select, textarea\")\n                            .each((_, element) => {\n                                const name = $(element).attr(\"name\");\n                                if (name) {\n                                    const newName = name.replace(\n                                        /\\[\\d+\\]/,\n                                        `[${index}]`\n                                    );\n                                    $(element).attr(\"name\", newName);\n                                }\n                                const id = $(element).attr(\"id\");\n                                if (id) {\n                                    const newId = id.replace(\n                                        /_\\d+_/,\n                                        `_${index}_`\n                                    );\n                                    $(element).attr(\"id\", newId);\n                                }\n                            });\n                    });\n                };\n\n                const updateTrashIcons = () => {\n                    log.debug(\"updateTrashIcons\");\n                    const pickups = $(selector);\n                    log.debug(\"pickups\");\n                    log.debug(pickups);\n                    log.debug('$(\".local-equipment-remove-pickup\")');\n                    log.debug($(\".local-equipment-remove-pickup\"));\n                    if (pickups.length > 1) {\n                        log.debug(\"if\");\n                        $(\".local-equipment-remove-pickup\").show();\n                    } else {\n                        log.debug(\"else\");\n                        $(\".local-equipment-remove-pickup\").hide();\n                    }\n                };\n\n                $(document).on(\n                    \"click\",\n                    \".local-equipment-remove-pickup\",\n                    function () {\n                        log.debug(\"Event triggered\");\n                        const $fieldset = $(this).closest(selector);\n                        log.debug($fieldset);\n                        const removedfieldset = $fieldset.remove();\n                        log.debug(\"Fieldset removed\");\n                        log.debug(\n                            \"Here's what returned from the '$fieldset.remove()' command:\"\n                        );\n                        log.debug(removedfieldset);\n                        updatePickupNumbers();\n                        updateHiddenFields();\n                        renumberFormElements();\n                        updateTrashIcons();\n                    }\n                );\n\n                updateTrashIcons();\n            });\n            M.util.js_complete(\"local_equipment/addpickups_form\");\n        },\n    };\n});\n"],"names":["M","util","js_pending","define","$","log","Str","init","document","ready","selector","debug","updateTrashIcons","pickups","length","show","hide","on","$fieldset","this","closest","removedfieldset","remove","each","index","element","get_string","then","string","text","catch","error","pickupsCount","val","url","URL","window","location","href","searchParams","set","history","replaceState","updateHiddenFields","fieldset","find","_","name","attr","newName","replace","id","newId","js_complete"],"mappings":";;;;;;;;AAwBAA,EAAEC,KAAKC,WAAW,mCAElBC,yCAAO,CAAC,SAAU,WAAY,aAAa,CAACC,EAAGC,IAAKC,OACzC,CACHC,KAAM,KACFH,EAAEI,UAAUC,OAAM,iBACRC,SAAW,mCACjBL,IAAIM,MAAM,wCA+DJC,iBAAmB,KACrBP,IAAIM,MAAM,0BACJE,QAAUT,EAAEM,UAClBL,IAAIM,MAAM,WACVN,IAAIM,MAAME,SACVR,IAAIM,MAAM,uCACVN,IAAIM,MAAMP,EAAE,mCACRS,QAAQC,OAAS,GACjBT,IAAIM,MAAM,MACVP,EAAE,kCAAkCW,SAEpCV,IAAIM,MAAM,QACVP,EAAE,kCAAkCY,SAI5CZ,EAAEI,UAAUS,GACR,QACA,kCACA,WACIZ,IAAIM,MAAM,yBACJO,UAAYd,EAAEe,MAAMC,QAAQV,UAClCL,IAAIM,MAAMO,iBACJG,gBAAkBH,UAAUI,SAClCjB,IAAIM,MAAM,oBACVN,IAAIM,MACA,+DAEJN,IAAIM,MAAMU,iBAxFdhB,IAAIM,MAAM,uBACVP,EAAE,kCAAkCmB,MAChC,CAACC,MAAOC,WACJnB,IAAIoB,WACA,SACA,kBACAF,MAAQ,GAEPG,MAAMC,SACHxB,EAAEqB,SAASI,KAAKD,WAEnBE,OAAOC,QACJ1B,IAAI0B,MACA,gCACAA,aAOG,MACvB1B,IAAIM,MAAM,4BACJqB,aAAe5B,EAAEM,UAAUI,OACjCT,IAAIM,qCAA8BqB,eAClC5B,EAAE,yBAAyB6B,IAAID,oBAGzBE,IAAM,IAAIC,IAAIC,OAAOC,SAASC,MACpCJ,IAAIK,aAAaC,IAAI,WAAYR,cACjCI,OAAOK,QAAQC,aAAa,GAAI,GAAIR,MA4DhCS,GAxDJtC,IAAIM,MAAM,wBACVP,EAAEM,UAAUa,MAAK,CAACC,MAAOoB,YACrBvC,IAAIM,qCAA8Ba,QAClCpB,EAAEwC,UACGC,KAAK,2BACLtB,MAAK,CAACuB,EAAGrB,iBACAsB,KAAO3C,EAAEqB,SAASuB,KAAK,WACzBD,KAAM,OACAE,QAAUF,KAAKG,QACjB,qBACI1B,YAERpB,EAAEqB,SAASuB,KAAK,OAAQC,eAEtBE,GAAK/C,EAAEqB,SAASuB,KAAK,SACvBG,GAAI,OACEC,MAAQD,GAAGD,QACb,mBACI1B,YAERpB,EAAEqB,SAASuB,KAAK,KAAMI,cAsClCxC,sBAIRA,sBAEJZ,EAAEC,KAAKoD,YAAY"}