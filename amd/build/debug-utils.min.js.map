{"version":3,"file":"debug-utils.min.js","sources":["../src/debug-utils.js"],"sourcesContent":["// This file is part of FLIP Plugins for Moodle\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Debug utilities for local_equipment plugin\n *\n * @module     local_equipment/debug-utils\n * @copyright  2024 onwards Joshua Kirby <josh@funlearningcompany.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/* eslint-disable no-console */\n\nimport Log from 'core/log';\n\n/**\n * Check if we're in developer debug mode\n * @returns {boolean} True if in developer debug mode\n */\nconst isDeveloperMode = () => {\n    return (\n        window.M?.cfg?.developerdebug ||\n        document.body.classList.contains('debug') ||\n        localStorage.getItem('moodle_debug') === 'true'\n    );\n};\n\n/**\n * Enhanced debugging function for AJAX responses\n * @param {string} context Context description for the debug session\n * @param {Object} data Response data to debug\n * @param {Object} extra Additional context data to include\n * @param {string} level Debug level: 'basic', 'verbose', or 'full'\n */\nexport const debugAjaxResponse = (\n    context,\n    data,\n    extra = {},\n    level = 'full'\n) => {\n    const timestamp = new Date().toISOString();\n\n    console.group(`üêõ AJAX Debug: ${context} - ${timestamp}`);\n\n    // Summary table\n    const summary = {\n        'Response Type': typeof data,\n        'Is Object': typeof data === 'object' && data !== null,\n        'Keys Count': data ? Object.keys(data).length : 0,\n        'Has Success': data && 'success' in data,\n        'Success Value': data ? data.success : 'N/A',\n        'Success Type': data ? typeof data.success : 'N/A',\n        'Has Message': data && 'message' in data,\n        'Has Error': data && 'error' in data,\n        'Has Exception': data && 'exception' in data,\n        ...extra,\n    };\n\n    console.table(summary);\n\n    if (level === 'verbose' || level === 'full') {\n        // Response data breakdown\n        if (data && typeof data === 'object') {\n            console.group('üìÑ Response Data');\n            console.table(data);\n            console.groupEnd();\n\n            // Property types analysis\n            console.group('üè∑Ô∏è Property Types');\n            const types = {};\n            Object.keys(data).forEach((key) => {\n                types[key] = {\n                    type: typeof data[key],\n                    hasValue: data[key] !== null && data[key] !== undefined,\n                    length:\n                        data[key] && data[key].length\n                            ? data[key].length\n                            : 'N/A',\n                };\n            });\n            console.table(types);\n            console.groupEnd();\n        }\n    }\n\n    if (level === 'full') {\n        // Raw JSON for copying\n        console.group('üìã Copy-able JSON');\n        console.log(JSON.stringify(data, null, 2));\n        console.groupEnd();\n\n        // Stack trace if available\n        if (Error.captureStackTrace || new Error().stack) {\n            console.group('üìç Stack Trace');\n            console.trace('Debug point location');\n            console.groupEnd();\n        }\n    }\n\n    console.groupEnd();\n\n    // Also log to Moodle's Log system for persistence\n    Log.debug(`AJAX Debug - ${context}`, {\n        summary: summary,\n        data: data,\n        extra: extra,\n    });\n};\n\n/**\n * Debug object properties in clean table format\n * @param {string} title Debug section title\n * @param {Object} obj Object to debug\n * @param {Array} columns Specific columns to show (optional)\n */\nexport const debugObjectTable = (title, obj, columns = null) => {\n    console.group(`üìä ${title}`);\n\n    if (obj && typeof obj === 'object') {\n        if (columns && Array.isArray(columns)) {\n            console.table(obj, columns);\n        } else {\n            console.table(obj);\n        }\n    } else {\n        console.log('Object is not debuggable:', typeof obj, obj);\n    }\n\n    console.groupEnd();\n};\n\n/**\n * Create a grouped console log with expandable sections\n * @param {string} title Main group title\n * @param {Object} sections Object containing section titles as keys and content as values\n * @param {boolean} collapsed Whether groups should start collapsed\n */\nexport const debugGroup = (title, sections, collapsed = false) => {\n    const groupMethod = collapsed ? console.groupCollapsed : console.group;\n\n    groupMethod(`üîç ${title}`);\n\n    Object.keys(sections).forEach((sectionTitle) => {\n        const content = sections[sectionTitle];\n\n        console.group(sectionTitle);\n\n        if (typeof content === 'object' && content !== null) {\n            console.table(content);\n        } else {\n            console.log(content);\n        }\n\n        console.groupEnd();\n    });\n\n    console.groupEnd();\n};\n\n/**\n * Enhanced error logging with context\n * @param {string} errorType Type/category of error\n * @param {string} message Error message\n * @param {Object} context Additional context data\n * @param {Error} originalError Original error object (optional)\n */\nexport const debugError = (\n    errorType,\n    message,\n    context = {},\n    originalError = null\n) => {\n    console.group(`‚ùå Error: ${errorType}`);\n\n    // Error summary\n    console.table({\n        'Error Type': errorType,\n        Message: message,\n        Timestamp: new Date().toISOString(),\n        'User Agent': navigator.userAgent.substring(0, 50) + '...',\n        URL: window.location.href,\n        'Has Context': Object.keys(context).length > 0,\n        'Has Original Error': originalError !== null,\n    });\n\n    // Context data\n    if (Object.keys(context).length > 0) {\n        console.group('üîç Context Data');\n        console.table(context);\n        console.groupEnd();\n    }\n\n    // Original error details\n    if (originalError) {\n        console.group('‚ö†Ô∏è Original Error');\n        console.error(originalError);\n        if (originalError.stack) {\n            console.log('Stack:', originalError.stack);\n        }\n        console.groupEnd();\n    }\n\n    console.groupEnd();\n\n    // Also log to Moodle's system\n    Log.error(`${errorType}: ${message}`, {\n        context: context,\n        originalError: originalError\n            ? {\n                  name: originalError.name,\n                  message: originalError.message,\n                  stack: originalError.stack,\n              }\n            : null,\n    });\n};\n\n/**\n * Debug network request/response cycle\n * @param {string} endpoint API endpoint or URL\n * @param {Object} requestData Request data sent\n * @param {Object} responseData Response data received\n * @param {number} duration Request duration in milliseconds\n * @param {boolean} success Whether the request was successful\n */\nexport const debugNetworkRequest = (\n    endpoint,\n    requestData,\n    responseData,\n    duration,\n    success\n) => {\n    const icon = success ? '‚úÖ' : '‚ùå';\n    const status = success ? 'SUCCESS' : 'FAILED';\n\n    console.group(`${icon} Network Request: ${endpoint} - ${status}`);\n\n    // Request summary\n    console.table({\n        Endpoint: endpoint,\n        Method: 'POST', // Most Moodle AJAX calls are POST\n        'Duration (ms)': duration,\n        Success: success,\n        'Request Size': JSON.stringify(requestData).length + ' bytes',\n        'Response Size': JSON.stringify(responseData).length + ' bytes',\n        Timestamp: new Date().toISOString(),\n    });\n\n    // Request data\n    console.group('üì§ Request Data');\n    console.table(requestData);\n    console.groupEnd();\n\n    // Response data\n    console.group('üì• Response Data');\n    console.table(responseData);\n    console.groupEnd();\n\n    console.groupEnd();\n};\n\n/**\n * Performance timing debug helper\n * @param {string} operation Operation name\n * @param {Function} callback Function to time\n * @returns {Promise|any} Result of the callback\n */\nexport const debugTiming = async (operation, callback) => {\n    const startTime = performance.now();\n\n    console.time(`‚è±Ô∏è ${operation}`);\n\n    try {\n        const result = await callback();\n        const endTime = performance.now();\n        const duration = endTime - startTime;\n\n        console.timeEnd(`‚è±Ô∏è ${operation}`);\n\n        console.log(`‚úÖ ${operation} completed in ${duration.toFixed(2)}ms`);\n\n        return result;\n    } catch (error) {\n        const endTime = performance.now();\n        const duration = endTime - startTime;\n\n        console.timeEnd(`‚è±Ô∏è ${operation}`);\n        console.error(\n            `‚ùå ${operation} failed after ${duration.toFixed(2)}ms:`,\n            error\n        );\n\n        throw error;\n    }\n};\n\n/**\n * Debug browser and environment information\n */\nexport const debugEnvironment = () => {\n    console.group('üåê Environment Debug Information');\n\n    // Browser info\n    console.table({\n        'User Agent': navigator.userAgent,\n        Platform: navigator.platform,\n        Language: navigator.language,\n        Online: navigator.onLine,\n        'Cookies Enabled': navigator.cookieEnabled,\n        'Do Not Track': navigator.doNotTrack,\n        'Screen Resolution': `${screen.width}x${screen.height}`,\n        'Color Depth': screen.colorDepth,\n        'Timezone Offset': new Date().getTimezoneOffset(),\n    });\n\n    // Moodle-specific info\n    if (window.M) {\n        console.group('üéì Moodle Environment');\n        console.table({\n            'Moodle Version': window.M.cfg.version || 'Unknown',\n            'WWW Root': window.M.cfg.wwwroot,\n            Theme: window.M.cfg.theme,\n            'Developer Debug': window.M.cfg.developerdebug,\n            'Session Name': window.M.cfg.sesskey ? 'Present' : 'Missing',\n            'User ID': window.M.cfg.userid || 'Not logged in',\n        });\n        console.groupEnd();\n    }\n\n    // Performance info\n    if (window.performance) {\n        console.group('‚ö° Performance Info');\n        const navigation = performance.getEntriesByType('navigation')[0];\n        if (navigation) {\n            console.table({\n                'DOM Content Loaded': `${navigation.domContentLoadedEventEnd.toFixed(\n                    2\n                )}ms`,\n                'Load Complete': `${navigation.loadEventEnd.toFixed(2)}ms`,\n                'DNS Lookup': `${(\n                    navigation.domainLookupEnd - navigation.domainLookupStart\n                ).toFixed(2)}ms`,\n                'Connection Time': `${(\n                    navigation.connectEnd - navigation.connectStart\n                ).toFixed(2)}ms`,\n                'Response Time': `${(\n                    navigation.responseEnd - navigation.responseStart\n                ).toFixed(2)}ms`,\n            });\n        }\n        console.groupEnd();\n    }\n\n    console.groupEnd();\n};\n\n/**\n * Conditional debug logging based on environment\n */\nexport const conditionalDebug = {\n    /**\n     * Log only in development mode\n     * @param {...any} args Arguments to log\n     */\n    dev: (...args) => {\n        if (isDeveloperMode()) {\n            console.log('üõ†Ô∏è [DEV]', ...args);\n        }\n    },\n\n    /**\n     * Log only in production mode\n     * @param {...any} args Arguments to log\n     */\n    prod: (...args) => {\n        if (!isDeveloperMode()) {\n            console.log('üè≠ [PROD]', ...args);\n        }\n    },\n\n    /**\n     * Always log, but with environment indicator\n     * @param {...any} args Arguments to log\n     */\n    always: (...args) => {\n        const env = isDeveloperMode() ? 'DEV' : 'PROD';\n        console.log(`üåç [${env}]`, ...args);\n    },\n};\n"],"names":["isDeveloperMode","window","M","cfg","developerdebug","document","body","classList","contains","localStorage","getItem","context","data","extra","level","timestamp","Date","toISOString","console","group","summary","Object","keys","length","success","table","groupEnd","types","forEach","key","type","hasValue","undefined","log","JSON","stringify","Error","captureStackTrace","stack","trace","debug","title","obj","columns","Array","isArray","sections","collapsed","groupMethod","groupCollapsed","sectionTitle","content","errorType","message","originalError","Message","Timestamp","navigator","userAgent","substring","URL","location","href","error","name","endpoint","requestData","responseData","duration","icon","status","Endpoint","Method","Success","async","operation","callback","startTime","performance","now","time","result","timeEnd","toFixed","Platform","platform","Language","language","Online","onLine","cookieEnabled","doNotTrack","screen","width","height","colorDepth","getTimezoneOffset","version","wwwroot","Theme","theme","sesskey","userid","navigation","getEntriesByType","domContentLoadedEventEnd","loadEventEnd","domainLookupEnd","domainLookupStart","connectEnd","connectStart","responseEnd","responseStart","conditionalDebug","dev","args","prod","always","env"],"mappings":"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"}