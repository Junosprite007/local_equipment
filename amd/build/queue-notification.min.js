define("local_equipment/queue-notification",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;_exports.init=()=>{let notificationElement=null,updateInterval=null;const updateNotification=count=>{if(notificationElement||(notificationElement=(()=>{const notification=document.createElement("div");return notification.id="qr-queue-notification",notification.className="qr-queue-notification",notification.style.cssText="\n            position: fixed;\n            bottom: 20px;\n            left: 20px;\n            background: #007bff;\n            color: white;\n            padding: 12px 16px;\n            border-radius: 8px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n            font-size: 14px;\n            font-weight: 500;\n            cursor: pointer;\n            z-index: 1050;\n            display: none;\n            transition: all 0.3s ease;\n            user-select: none;\n        ",notification.addEventListener("mouseenter",(()=>{notification.style.transform="translateY(-2px)",notification.style.boxShadow="0 6px 16px rgba(0, 0, 0, 0.2)"})),notification.addEventListener("mouseleave",(()=>{notification.style.transform="translateY(0)",notification.style.boxShadow="0 4px 12px rgba(0, 0, 0, 0.15)"})),notification.addEventListener("click",(()=>{const url=new URL(M.cfg.wwwroot+"/local/equipment/inventory/generate_qr.php");url.searchParams.set("action","print_queue"),window.open(url.toString(),"_blank")})),document.body.appendChild(notification),notification})()),count>0){const icon="🖨️",text=1===count?"1 QR code queued":"".concat(count," QR codes queued");notificationElement.innerHTML="".concat(icon," ").concat(text),notificationElement.style.display="block",notificationElement.style.animation="none",setTimeout((()=>{notificationElement.style.animation="pulse 1s ease-in-out"}),10)}else notificationElement.style.display="none"},fetchQueueCount=()=>{fetch(M.cfg.wwwroot+"/local/equipment/classes/external/get_queue_count.php",{method:"GET",credentials:"same-origin"}).then((response=>response.json())).then((data=>{data.success&&updateNotification(data.count)})).catch((()=>{}))},stopMonitoring=()=>{updateInterval&&(clearInterval(updateInterval),updateInterval=null)},refresh=()=>{fetchQueueCount()},style=document.createElement("style");return style.textContent="\n        @keyframes pulse {\n            0% { transform: scale(1); }\n            50% { transform: scale(1.05); }\n            100% { transform: scale(1); }\n        }\n\n        .qr-queue-notification:hover {\n            background: #0056b3 !important;\n        }\n\n        @media (max-width: 768px) {\n            .qr-queue-notification {\n                bottom: 10px !important;\n                left: 10px !important;\n                padding: 10px 12px !important;\n                font-size: 13px !important;\n            }\n        }\n    ",document.head.appendChild(style),fetchQueueCount(),updateInterval=setInterval(fetchQueueCount,3e4),window.addEventListener("beforeunload",stopMonitoring),window.QRQueueNotification={refresh:refresh,updateCount:updateNotification},{refresh:refresh,updateCount:updateNotification,stop:stopMonitoring}}}));

//# sourceMappingURL=queue-notification.min.js.map