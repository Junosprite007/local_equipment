{"version":3,"file":"virtualcourseconsent_form.min.js","sources":["../src/virtualcourseconsent_form.js"],"sourcesContent":["// This file is part of FLIP Plugins for Moodle\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * JavaScript for the virtual course consent form.\n *\n * @module     local_equipment/virtualcourseconsent_form\n * @copyright  2024 Joshua Kirby <josh@funlearningcompany.com>\n * @license    https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport { get_string as getString } from 'core/str';\nimport Ajax from 'core/ajax';\n\n/**\n * Initialize the virtual course consent form functionality.\n */\nexport const init = () => {\n    setupPickupMethodToggle();\n    setupDynamicCourseSelection();\n    setupStudentEmailGeneration();\n    setupExchangeLocationFiltering();\n};\n\n/**\n * Set up the toggle for pickup method fields.\n */\nconst setupPickupMethodToggle = () => {\n    const $pickupMethod = $('#id_pickupmethod');\n    const $otherPickupFields = $(\n        '#id_pickuppersonname, #id_pickuppersonphone, #id_pickuppersondetails'\n    ).closest('.mb-3');\n\n    const toggleOtherPickupFields = () => {\n        if ($pickupMethod.val() === 'other') {\n            $otherPickupFields.show();\n        } else {\n            $otherPickupFields.hide();\n        }\n    };\n\n    $pickupMethod.on('change', toggleOtherPickupFields);\n    toggleOtherPickupFields(); // Initial state\n};\n\n/**\n * Set up dynamic course selection based on partnership.\n */\nconst setupDynamicCourseSelection = () => {\n    const $partnership = $('#id_partnership');\n    const $courseSelects = $(\n        'select[name^=\"studentrepeats\"][name$=\"[student_courses]\"]'\n    );\n\n    $partnership.on('change', () => {\n        const partnershipId = $partnership.val();\n        if (partnershipId) {\n            Ajax.call([\n                {\n                    methodname: 'local_equipment_get_partnership_courses',\n                    args: { partnershipid: partnershipId },\n                    done: (courses) => {\n                        $courseSelects.empty();\n                        Object.entries(courses).forEach(([id, name]) => {\n                            $courseSelects.append(\n                                $('<option>').val(id).text(name)\n                            );\n                        });\n                    },\n                    fail: (error) => {\n                        // eslint-disable-next-line no-console\n                        console.error('Error fetching courses:', error);\n                    },\n                },\n            ]);\n        }\n    });\n};\n\n/**\n * Set up student email generation.\n */\nconst setupStudentEmailGeneration = () => {\n    $('input[name$=\"[student_email]\"]').each((_, emailInput) => {\n        const $email = $(emailInput);\n        const $firstName = $email\n            .closest('.fgroup')\n            .find('input[name$=\"[student_firstname]\"]');\n\n        $firstName.on('blur', () => {\n            if (!$email.val()) {\n                const parentEmail = $('input[name=\"email\"]').val();\n                const studentFirstName = $firstName.val().toLowerCase();\n                const generatedEmail = parentEmail.replace(\n                    '@',\n                    `+${studentFirstName}@`\n                );\n                $email.val(generatedEmail);\n                getString('studentemailgenerated', 'local_equipment')\n                    .then((string) => {\n                        $email\n                            .closest('.mb-3')\n                            .append(\n                                `<div class=\"form-text text-muted\">${string}</div>`\n                            );\n                    })\n                    .catch((error) => {\n                        // eslint-disable-next-line no-console\n                        console.error('Error fetching string:', error);\n                    });\n            }\n        });\n    });\n};\n\n/**\n * Set up dynamic filtering of pickup times based on exchange location selection.\n */\nconst setupExchangeLocationFiltering = () => {\n    const $exchangeLocation = $('#id_exchange_partnershipid');\n    const $pickupTime = $('#id_pickup');\n\n    // Store all pickup time options on page load\n    const allPickupOptions = $pickupTime.find('option').clone();\n\n    const filterPickupTimes = () => {\n        const selectedPartnershipId = $exchangeLocation.val();\n\n        // Clear current options except the default \"Have us contact you\" option\n        $pickupTime.empty();\n        $pickupTime.append(allPickupOptions.filter('[value=\"0\"]').clone());\n\n        if (selectedPartnershipId && selectedPartnershipId !== '') {\n            // Filter options by partnership - pickup times should contain partnership name\n            allPickupOptions.each(function () {\n                const $option = $(this);\n                const optionValue = $option.val();\n                const optionText = $option.text();\n\n                // Skip the default \"Have us contact you\" option (value = 0)\n                if (optionValue !== '0' && optionValue !== '') {\n                    // Get partnership name to compare\n                    const selectedPartnership = $exchangeLocation\n                        .find('option:selected')\n                        .text();\n                    const partnershipName = selectedPartnership.split(' â€” ')[0]; // Get partnership name before address\n\n                    // Check if pickup time option contains the selected partnership name\n                    if (optionText.includes(partnershipName)) {\n                        $pickupTime.append($option.clone());\n                    }\n                }\n            });\n        }\n\n        // Ensure the default option remains selected\n        $pickupTime.val('0');\n    };\n\n    // Set up event listener for exchange location changes\n    $exchangeLocation.on('change', filterPickupTimes);\n\n    // Apply initial filtering\n    filterPickupTimes();\n};\n"],"names":["setupPickupMethodToggle","setupDynamicCourseSelection","setupStudentEmailGeneration","setupExchangeLocationFiltering","$pickupMethod","$otherPickupFields","closest","toggleOtherPickupFields","val","show","hide","on","$partnership","$courseSelects","partnershipId","call","methodname","args","partnershipid","done","courses","empty","Object","entries","forEach","_ref","id","name","append","text","fail","error","console","each","_","emailInput","$email","$firstName","find","parentEmail","studentFirstName","toLowerCase","generatedEmail","replace","then","string","catch","$exchangeLocation","$pickupTime","allPickupOptions","clone","filterPickupTimes","selectedPartnershipId","filter","$option","this","optionValue","optionText","partnershipName","split","includes"],"mappings":";;;;;;;4KA8BoB,KAChBA,0BACAC,8BACAC,8BACAC,wCAMEH,wBAA0B,WACtBI,eAAgB,mBAAE,oBAClBC,oBAAqB,mBACvB,wEACFC,QAAQ,SAEJC,wBAA0B,KACA,UAAxBH,cAAcI,MACdH,mBAAmBI,OAEnBJ,mBAAmBK,QAI3BN,cAAcO,GAAG,SAAUJ,yBAC3BA,2BAMEN,4BAA8B,WAC1BW,cAAe,mBAAE,mBACjBC,gBAAiB,mBACnB,6DAGJD,aAAaD,GAAG,UAAU,WAChBG,cAAgBF,aAAaJ,MAC/BM,6BACKC,KAAK,CACN,CACIC,WAAY,0CACZC,KAAM,CAAEC,cAAeJ,eACvBK,KAAOC,UACHP,eAAeQ,QACfC,OAAOC,QAAQH,SAASI,SAAQC,WAAEC,GAAIC,WAClCd,eAAee,QACX,mBAAE,YAAYpB,IAAIkB,IAAIG,KAAKF,WAIvCG,KAAOC,QAEHC,QAAQD,MAAM,0BAA2BA,eAW3D7B,4BAA8B,yBAC9B,kCAAkC+B,MAAK,CAACC,EAAGC,oBACnCC,QAAS,mBAAED,YACXE,WAAaD,OACd9B,QAAQ,WACRgC,KAAK,sCAEVD,WAAW1B,GAAG,QAAQ,SACbyB,OAAO5B,MAAO,OACT+B,aAAc,mBAAE,uBAAuB/B,MACvCgC,iBAAmBH,WAAW7B,MAAMiC,cACpCC,eAAiBH,YAAYI,QAC/B,eACIH,uBAERJ,OAAO5B,IAAIkC,oCACD,wBAAyB,mBAC9BE,MAAMC,SACHT,OACK9B,QAAQ,SACRsB,mDACwCiB,qBAGhDC,OAAOf,QAEJC,QAAQD,MAAM,yBAA0BA,kBAU1D5B,+BAAiC,WAC7B4C,mBAAoB,mBAAE,8BACtBC,aAAc,mBAAE,cAGhBC,iBAAmBD,YAAYV,KAAK,UAAUY,QAE9CC,kBAAoB,WAChBC,sBAAwBL,kBAAkBvC,MAGhDwC,YAAY3B,QACZ2B,YAAYpB,OAAOqB,iBAAiBI,OAAO,eAAeH,SAEtDE,uBAAmD,KAA1BA,uBAEzBH,iBAAiBhB,MAAK,iBACZqB,SAAU,mBAAEC,MACZC,YAAcF,QAAQ9C,MACtBiD,WAAaH,QAAQzB,UAGP,MAAhB2B,aAAuC,KAAhBA,YAAoB,OAKrCE,gBAHsBX,kBACvBT,KAAK,mBACLT,OACuC8B,MAAM,OAAO,GAGrDF,WAAWG,SAASF,kBACpBV,YAAYpB,OAAO0B,QAAQJ,aAO3CF,YAAYxC,IAAI,MAIpBuC,kBAAkBpC,GAAG,SAAUwC,mBAG/BA"}