{"version":3,"file":"vccsubmission_form.min.js","sources":["../src/vccsubmission_form.js"],"sourcesContent":["// This file is part of FLIP Plugins for Moodle\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * JavaScript for managing consents.\n *\n * @module     local_equipment/manage_consents\n * @copyright  2024 Joshua Kirby <josh@funlearningcompany.com>\n * @license    https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport { get_string as getString } from 'core/str';\nimport Log from 'core/log';\n\n/**\n * Initialize the manage consents functionality.\n */\nexport const init = () => {\n    setupViewNotes();\n    setupAddNote();\n};\n\n/**\n * Initialize the form functionality.\n */\nexport const initStudent = () => {\n    Log.debug('Add Student Form JS initialized');\n    makeStudentSectionsCollapsible();\n    handleDeleteStudent();\n    handleAddStudent();\n    updateStudentNumbers();\n};\n\n/**\n * Set up view notes functionality.\n */\nconst setupViewNotes = () => {\n    $('.view-notes').on('click', (e) => {\n        e.preventDefault();\n        const consentId = $(e.currentTarget).data('id');\n        Ajax.call([\n            {\n                methodname: 'local_equipment_get_consent_notes',\n                args: { consentid: consentId },\n                done: (notes) => {\n                    $('#note-modal .modal-body').html(notes);\n                    $('#note-modal').modal('show');\n                },\n                fail: Notification.exception,\n            },\n        ]);\n    });\n};\n\n/**\n * Set up add note functionality.\n */\nconst setupAddNote = () => {\n    $('.add-note').on('click', (e) => {\n        e.preventDefault();\n        const consentId = $(e.currentTarget).data('id');\n        $('#note-modal .modal-body').html(\n            '<textarea id=\"admin-note\" class=\"form-control\" rows=\"5\"></textarea>'\n        );\n        $('#note-modal').modal('show');\n\n        $('#save-note')\n            .off('click')\n            .on('click', () => {\n                const note = $('#admin-note').val();\n                Ajax.call([\n                    {\n                        methodname: 'local_equipment_add_consent_note',\n                        args: { consentid: consentId, note: note },\n                        done: () => {\n                            $('#note-modal').modal('hide');\n                            getString('notesaved', 'local_equipment')\n                                .then((s) => {\n                                    Notification.addNotification({\n                                        message: s,\n                                        type: 'success',\n                                    });\n                                })\n                                .catch(Notification.exception);\n                        },\n                        fail: Notification.exception,\n                    },\n                ]);\n            });\n    });\n};\n\n/**\n * Make student sections collapsible.\n */\nconst makeStudentSectionsCollapsible = () => {\n    $('fieldset[id^=\"id_studentheader_\"]').each((index, element) => {\n        $(element)\n            .addClass('collapsible')\n            .addClass(index === 0 ? 'collapsed' : 'expanded');\n        $(element).on('click', () => {\n            $(element).toggleClass('collapsed expanded');\n        });\n    });\n};\n\n/**\n * Handle delete student button clicks.\n */\nconst handleDeleteStudent = () => {\n    $(document).on('click', '.local-equipment-remove-student', (e) => {\n        e.preventDefault();\n        const fieldset = $(e.currentTarget).closest(\n            'fieldset[id^=\"id_studentheader_\"]'\n        );\n        fieldset.remove();\n        updateStudentNumbers();\n    });\n};\n\n/**\n * Handle add student button clicks.\n */\nconst handleAddStudent = () => {\n    $('input[name=\"add_student\"]').on('click', () => {\n        setTimeout(updateStudentNumbers, 100);\n    });\n};\n\n/**\n * Update student numbers in headers.\n */\nconst updateStudentNumbers = () => {\n    $('fieldset[id^=\"id_studentheader_\"]').each((index, element) => {\n        const legend = $(element).find('legend');\n        getString('student', 'local_equipment', index + 1)\n            .then((str) => {\n                legend.text(str);\n            })\n            .catch((error) => {\n                // eslint-disable-next-line no-console\n                console.error('Error updating student number:', error);\n            });\n    });\n};\n"],"names":["setupViewNotes","setupAddNote","debug","makeStudentSectionsCollapsible","handleDeleteStudent","handleAddStudent","updateStudentNumbers","on","e","preventDefault","consentId","currentTarget","data","call","methodname","args","consentid","done","notes","html","modal","fail","Notification","exception","off","note","val","then","s","addNotification","message","type","catch","each","index","element","addClass","toggleClass","document","closest","remove","setTimeout","legend","find","str","text","error","console"],"mappings":";;;;;;;uRAgCoB,KAChBA,iBACAC,qCAMuB,kBACnBC,MAAM,mCACVC,iCACAC,sBACAC,mBACAC,8BAMEN,eAAiB,yBACjB,eAAeO,GAAG,SAAUC,IAC1BA,EAAEC,uBACIC,WAAY,mBAAEF,EAAEG,eAAeC,KAAK,oBACrCC,KAAK,CACN,CACIC,WAAY,oCACZC,KAAM,CAAEC,UAAWN,WACnBO,KAAOC,4BACD,2BAA2BC,KAAKD,2BAChC,eAAeE,MAAM,SAE3BC,KAAMC,sBAAaC,iBAS7BtB,aAAe,yBACf,aAAaM,GAAG,SAAUC,IACxBA,EAAEC,uBACIC,WAAY,mBAAEF,EAAEG,eAAeC,KAAK,0BACxC,2BAA2BO,KACzB,2FAEF,eAAeC,MAAM,4BAErB,cACGI,IAAI,SACJjB,GAAG,SAAS,WACHkB,MAAO,mBAAE,eAAeC,oBACzBb,KAAK,CACN,CACIC,WAAY,mCACZC,KAAM,CAAEC,UAAWN,UAAWe,KAAMA,MACpCR,KAAM,yBACA,eAAeG,MAAM,4BACb,YAAa,mBAClBO,MAAMC,0BACUC,gBAAgB,CACzBC,QAASF,EACTG,KAAM,eAGbC,MAAMV,sBAAaC,YAE5BF,KAAMC,sBAAaC,oBAUrCpB,+BAAiC,yBACjC,qCAAqC8B,MAAK,CAACC,MAAOC,+BAC9CA,SACGC,SAAS,eACTA,SAAmB,IAAVF,MAAc,YAAc,gCACxCC,SAAS5B,GAAG,SAAS,yBACjB4B,SAASE,YAAY,6BAQ7BjC,oBAAsB,yBACtBkC,UAAU/B,GAAG,QAAS,mCAAoCC,IACxDA,EAAEC,kBACe,mBAAED,EAAEG,eAAe4B,QAChC,qCAEKC,SACTlC,2BAOFD,iBAAmB,yBACnB,6BAA6BE,GAAG,SAAS,KACvCkC,WAAWnC,qBAAsB,SAOnCA,qBAAuB,yBACvB,qCAAqC2B,MAAK,CAACC,MAAOC,iBAC1CO,QAAS,mBAAEP,SAASQ,KAAK,8BACrB,UAAW,kBAAmBT,MAAQ,GAC3CP,MAAMiB,MACHF,OAAOG,KAAKD,QAEfZ,OAAOc,QAEJC,QAAQD,MAAM,iCAAkCA"}