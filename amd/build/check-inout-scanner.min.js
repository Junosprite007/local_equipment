/**
 * Check-in/Check-out scanner interface.
 *
 * @module     local_equipment/check-inout-scanner
 * @copyright  2024 onwards Joshua Kirby <josh@funlearningcompany.com>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("local_equipment/check-inout-scanner",["local_equipment/universal-scanner","core/notification","core/log","core/ajax"],(function(UniversalScanner,Notification,Log,Ajax){function initializeScanner(){Log.debug("local_equipment/check-inout-scanner: initializeScanner() called");const scannerContainer=document.getElementById("scanner-container"),equipmentDetails=document.getElementById("equipment-details"),manualUuid=document.getElementById("manual_uuid"),lookupBtn=document.getElementById("lookup_btn");if(!scannerContainer||!equipmentDetails)return void Log.error("Required elements not found");let scanner=null,currentEquipment=null,currentMode="student";!function(){scannerContainer.innerHTML="";const scannerDiv=document.createElement("div");scannerDiv.id="qr-scanner-container",scannerDiv.className="qr-scanner-container mb-3",scannerContainer.appendChild(scannerDiv);const controlsDiv=document.createElement("div");controlsDiv.className="scanner-controls",controlsDiv.innerHTML='\n                <div class="scanner-toggle mb-3">\n                    <div class="btn-group" role="group">\n                        <button type="button" id="start-camera-btn" class="btn btn-primary">\n                            <i class="fa fa-camera"></i> Start Camera\n                        </button>\n                        <button type="button" id="stop-camera-btn" class="btn btn-secondary" disabled>\n                            <i class="fa fa-stop"></i> Stop Camera\n                        </button>\n                    </div>\n                    <div class="mt-2">\n                        <button type="button" id="scan-qr-btn" class="btn btn-success" style="display: none;">\n                            <i class="fa fa-qrcode"></i> Scan\n                        </button>\n                        <button type="button" id="flip-camera-btn" class="btn btn-outline-secondary btn-sm ms-2"\n                            style="display: none;" title="Toggle camera mirror">\n                            <i class="fa fa-arrows-h"></i> Flip\n                        </button>\n                    </div>\n                </div>\n            ',scannerContainer.appendChild(controlsDiv),scanner=new UniversalScanner({containerId:"qr-scanner-container",resultCallback:handleScanResult,errorCallback:handleScanError}),scanner.init().then((success=>{success?Log.debug("Scanner initialized successfully"):(Log.error("Scanner initialization failed"),showFallbackInterface())})),function(){const startBtn=document.getElementById("start-camera-btn"),stopBtn=document.getElementById("stop-camera-btn"),scanBtn=document.getElementById("scan-qr-btn"),flipBtn=document.getElementById("flip-camera-btn");let isScanning=!1,isMirrored=!1;startBtn&&startBtn.addEventListener("click",(async()=>{try{scanner.stream=await async function(){const constraints={video:{facingMode:"environment",width:{ideal:1280},height:{ideal:720}}};if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia)try{return await navigator.mediaDevices.getUserMedia(constraints)}catch(error){Log.debug("Modern API failed:",error)}if(navigator.getUserMedia)try{return await new Promise(((resolve,reject)=>{navigator.getUserMedia(constraints,resolve,reject)}))}catch(error){Log.debug("Legacy getUserMedia failed:",error)}throw new Error("No camera API available")}(),scanner.video.srcObject=scanner.stream,await scanner.video.play(),scanner.canvas.width=scanner.video.videoWidth,scanner.canvas.height=scanner.video.videoHeight,scanner.updateStatus("Camera ready - click Scan to detect QR code"),startBtn.disabled=!0,stopBtn.disabled=!1,scanBtn.style.display="inline-block",flipBtn.style.display="inline-block",updateVideoMirror()}catch(error){Log.error("Failed to start camera:",error),Notification.addNotification({message:"Failed to start camera: "+error.message,type:"error"})}}));stopBtn&&stopBtn.addEventListener("click",(()=>{scanner.stream&&(scanner.stream.getTracks().forEach((track=>track.stop())),scanner.stream=null),scanner.video&&(scanner.video.srcObject=null),scanner.updateStatus("Camera stopped"),startBtn.disabled=!1,stopBtn.disabled=!0,scanBtn.style.display="none",flipBtn.style.display="none",isScanning=!1}));flipBtn&&flipBtn.addEventListener("click",(()=>{isMirrored=!isMirrored,updateVideoMirror();const text=isMirrored?"Flip (Mirrored)":"Flip (Normal)";flipBtn.innerHTML='<i class="fa fa-arrows-h"></i> '.concat(text);showSuccessMessage(isMirrored?"Camera mirrored (good for webcams)":"Camera normal (good for mobile)")}));function updateVideoMirror(){const videoElement=document.querySelector("#qr-scanner-container video");videoElement&&(videoElement.style.transform=isMirrored?"scaleX(-1)":"scaleX(1)",Log.debug("Video mirror updated:",isMirrored?"mirrored (scaleX(-1))":"normal (scaleX(1))","Applied transform:",videoElement.style.transform))}scanBtn&&scanBtn.addEventListener("click",(async()=>{if(!isScanning){isScanning=!0,scanBtn.disabled=!0,scanBtn.innerHTML='<i class="fa fa-spinner fa-spin"></i> Scanning...',scanner.updateStatus("Scanning for QR code...");try{if(await performSingleScan())scanner.updateStatus("Scan successful!"),scanner.showScanSuccess();else{scanner.updateStatus("No QR code detected - try again");showErrorMessage("No QR code detected. Please position the QR code in the target area and try again.")}}catch(error){Log.error("Scan error:",error),scanner.updateStatus("Scan failed"),showErrorMessage("Scan failed. Please try again.")}isScanning=!1,scanBtn.disabled=!1,scanBtn.innerHTML='<i class="fa fa-qrcode"></i> Scan',setTimeout((()=>{scanner.updateStatus("Ready to scan - position QR code and click Scan")}),2e3)}}));async function performSingleScan(){return new Promise((resolve=>{let scanAttempts=0;const maxAttempts=30;let found=!1;const scanFrame=async()=>{if(found||scanAttempts>=maxAttempts)resolve(found);else{try{if(!scanner.video||scanner.video.readyState!==scanner.video.HAVE_ENOUGH_DATA)return scanAttempts++,void requestAnimationFrame(scanFrame);if(scanner.context.drawImage(scanner.video,0,0,scanner.canvas.width,scanner.canvas.height),scanner.hasBarcodeDetector&&window.BarcodeDetector)try{const detector=new window.BarcodeDetector({formats:["qr_code"]}),barcodes=await detector.detect(scanner.canvas);if(barcodes.length>0){const barcode=barcodes[0];return Log.debug("QR code detected:",barcode.rawValue),processQRCode(barcode.rawValue),found=!0,void resolve(!0)}}catch(error){Log.debug("BarcodeDetector failed:",error)}}catch(error){Log.debug("Frame processing error:",error)}scanAttempts++,requestAnimationFrame(scanFrame)}};requestAnimationFrame(scanFrame)}))}}()}();function handleScanResult(result){if(result.success&&result.data){const qrData=result.data.qr_data||result.data;Log.debug("Scan successful, processing QR code:",qrData),processQRCode(qrData)}else Log.error("Scan failed:",result),showErrorMessage(result.message||"Scan failed. Please try again.")}function handleScanError(errorCode,message){Log.error("Scanner error:",errorCode,message),"camera_access_failed"===errorCode&&showFallbackInterface()}function showFallbackInterface(){const scannerDiv=document.getElementById("qr-scanner-container");scannerDiv&&(scannerDiv.innerHTML='\n                    <div class="alert alert-warning text-center">\n                        <i class="fa fa-exclamation-triangle"></i>\n                        <strong>Camera not available</strong><br>\n                        Please use the manual UUID entry below.\n                    </div>\n                ')}function processQRCode(qrData){let uuid=qrData;try{const parsed=JSON.parse(qrData);parsed.uuid?uuid=parsed.uuid:parsed.id&&(uuid=parsed.id)}catch(e){}lookupEquipment(uuid)}function lookupEquipment(uuid){Log.debug("Looking up equipment:",uuid),Ajax.call([{methodname:"local_equipment_lookup_equipment",args:{uuid:uuid},done:function(response){response.success?(currentEquipment=response,displayEquipmentDetails(response)):(showErrorMessage(response.message||"Equipment not found"),clearEquipmentDetails())},fail:function(error){Log.error("AJAX error:",error);const url=M.cfg.wwwroot+"/local/equipment/inventory/check_inout.php";fetch(url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({ajax:"1",action:"lookup_equipment",uuid:uuid,sesskey:M.cfg.sesskey})}).then((response=>response.json())).then((data=>{data.success?(currentEquipment=data,displayEquipmentDetails(data)):(showErrorMessage(data.message||"Equipment not found"),clearEquipmentDetails())})).catch((err=>{Log.error("Fetch error:",err),showErrorMessage("Network error occurred"),clearEquipmentDetails()}))}}])}function displayEquipmentDetails(data){const item=data.item,transactions=data.transactions||[];let statusBadge="";switch(item.status){case"available":statusBadge='<span class="badge bg-success">Available</span>';break;case"checked_out":statusBadge='<span class="badge bg-warning">Checked Out</span>';break;case"in_transit":statusBadge='<span class="badge bg-info">In Transit</span>';break;case"maintenance":statusBadge='<span class="badge bg-secondary">Maintenance</span>';break;case"damaged":statusBadge='<span class="badge bg-danger">Damaged</span>';break;default:statusBadge='<span class="badge bg-secondary">'+item.status+"</span>"}let currentAssignment="";if(item.firstname&&item.lastname){const email=item.user_email?"<br><small>".concat(item.user_email,"</small>"):"";currentAssignment='\n                    <div class="alert alert-info">\n                        <strong>Currently assigned to:</strong><br>\n                        '.concat(item.firstname," ").concat(item.lastname,"\n                        ").concat(email,"\n                    </div>\n                ")}else item.location_name&&(currentAssignment='\n                    <div class="alert alert-secondary">\n                        <strong>Current location:</strong><br>\n                        '.concat(item.location_name,"\n                    </div>\n                "));let assignmentInterface="";if("student"===currentMode){const unassignBtn=item.current_userid?'<button type="button" id="unassign-btn" class="btn btn-outline-secondary">Remove Assignment</button>':"";assignmentInterface='\n                    <div class="assignment-section">\n                        <h5>Student Assignment</h5>\n                        <div class="mb-3">\n                            <label for="user-search" class="form-label">Search for student:</label>\n                            <input type="text" id="user-search" class="form-control"\n                                placeholder="Type student name or email...">\n                            <div id="user-results" class="list-group mt-2" style="display: none;"></div>\n                        </div>\n                        <div class="d-grid gap-2">\n                            <button type="button" id="assign-user-btn" class="btn btn-primary" disabled>\n                                Assign to Selected Student\n                            </button>\n                            '.concat(unassignBtn,"\n                        </div>\n                    </div>\n                ")}else assignmentInterface='\n                    <div class="assignment-section">\n                        <h5>Location Transfer</h5>\n                        <div class="mb-3">\n                            <label for="location-select" class="form-label">Transfer to location:</label>\n                            <select id="location-select" class="form-select">\n                                <option value="">Select location...</option>\n                            </select>\n                        </div>\n                        <div class="d-grid gap-2">\n                            <button type="button" id="transfer-location-btn" class="btn btn-primary" disabled>\n                                Transfer to Selected Location\n                            </button>\n                        </div>\n                    </div>\n                ';let transactionsList="";transactions.length>0&&(transactionsList='<h6>Recent Transactions</h6><div class="list-group list-group-flush">',transactions.forEach((trans=>{const date=new Date(1e3*trans.timestamp).toLocaleDateString(),type=trans.transaction_type.charAt(0).toUpperCase()+trans.transaction_type.slice(1);let details="";trans.to_firstname&&trans.to_lastname?details="To: ".concat(trans.to_firstname," ").concat(trans.to_lastname):trans.from_firstname&&trans.from_lastname?details="From: ".concat(trans.from_firstname," ").concat(trans.from_lastname):trans.to_location?details="To: ".concat(trans.to_location):trans.from_location&&(details="From: ".concat(trans.from_location));const detailsHtml=details?'<p class="mb-1">'.concat(details,"</p>"):"",notesHtml=trans.notes?'<small class="text-muted">'.concat(trans.notes,"</small>"):"";transactionsList+='\n                        <div class="list-group-item">\n                            <div class="d-flex w-100 justify-content-between">\n                                <h6 class="mb-1">'.concat(type,"</h6>\n                                <small>").concat(date,"</small>\n                            </div>\n                            ").concat(detailsHtml,"\n                            ").concat(notesHtml,"\n                        </div>\n                    ")})),transactionsList+="</div>");const manufacturerHtml=item.manufacturer?"<p><strong>Manufacturer:</strong> ".concat(item.manufacturer,"</p>"):"",categoryHtml=item.category?"<p><strong>Category:</strong> ".concat(item.category,"</p>"):"",html='\n                <div class="equipment-info">\n                    <div class="d-flex justify-content-between align-items-start mb-3">\n                        <h4>'.concat(item.product_name,"</h4>\n                        ").concat(statusBadge,'\n                    </div>\n\n                    <div class="row mb-3">\n                        <div class="col-sm-6">\n                            <strong>UUID:</strong><br>\n                            <code>').concat(item.uuid,'</code>\n                        </div>\n                        <div class="col-sm-6">\n                            <strong>Condition:</strong><br>\n                            <span class="badge bg-light text-dark">').concat(item.condition_status||"Unknown","</span>\n                        </div>\n                    </div>\n\n                    ").concat(manufacturerHtml,"\n                    ").concat(categoryHtml,"\n\n                    ").concat(currentAssignment,"\n\n                    <hr>\n\n                    ").concat(assignmentInterface,"\n\n                    ").concat('\n                <div class="notes-section mt-3">\n                    <h6>Add Notes</h6>\n                    <div class="mb-2">\n                        <textarea id="equipment-notes" class="form-control" rows="2"\n                            placeholder="Add notes about this equipment..."></textarea>\n                    </div>\n                    <button type="button" id="save-notes-btn" class="btn btn-outline-primary btn-sm">\n                        Save Notes\n                    </button>\n                </div>\n            ',"\n\n                    <hr>\n\n                    ").concat(transactionsList,"\n                </div>\n            ");equipmentDetails.innerHTML=html,function(item){"student"===currentMode?function(item){const userSearch=document.getElementById("user-search"),userResults=document.getElementById("user-results"),assignBtn=document.getElementById("assign-user-btn"),unassignBtn=document.getElementById("unassign-btn");let selectedUser=null,searchTimeout=null;userSearch&&userSearch.addEventListener("input",(function(){const query=this.value.trim();clearTimeout(searchTimeout),query.length<2?userResults.style.display="none":searchTimeout=setTimeout((()=>{searchUsers(query)}),300)}));function searchUsers(query){const url=M.cfg.wwwroot+"/local/equipment/inventory/check_inout.php";fetch(url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({ajax:"1",action:"search_users",query:query,sesskey:M.cfg.sesskey})}).then((response=>response.json())).then((data=>{displayUserResults(data.users||[])})).catch((error=>{Log.error("User search error:",error)}))}function displayUserResults(users){if(0===users.length)return void(userResults.style.display="none");let html="";users.forEach((user=>{html+='\n                        <button type="button" class="list-group-item list-group-item-action user-option"\n                                data-userid="'.concat(user.id,'" data-name="').concat(user.firstname," ").concat(user.lastname,'">\n                            <strong>').concat(user.firstname," ").concat(user.lastname,'</strong><br>\n                            <small class="text-muted">').concat(user.email,"</small>\n                        </button>\n                    ")})),userResults.innerHTML=html,userResults.style.display="block",userResults.querySelectorAll(".user-option").forEach((btn=>{btn.addEventListener("click",(function(){selectedUser={id:this.dataset.userid,name:this.dataset.name},userSearch.value=selectedUser.name,userResults.style.display="none",assignBtn.disabled=!1}))}))}assignBtn&&assignBtn.addEventListener("click",(()=>{selectedUser&&function(uuid,userid,userName){const notes=document.getElementById("equipment-notes").value.trim(),url=M.cfg.wwwroot+"/local/equipment/inventory/check_inout.php";fetch(url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({ajax:"1",action:"update_assignment",uuid:uuid,userid:userid,notes:notes,sesskey:M.cfg.sesskey})}).then((response=>response.json())).then((data=>{data.success?(showSuccessMessage("Equipment assigned to ".concat(userName)),lookupEquipment(uuid)):showErrorMessage(data.message||"Assignment failed")})).catch((error=>{Log.error("Assignment error:",error),showErrorMessage("Network error occurred")}))}(item.uuid,selectedUser.id,selectedUser.name)}));unassignBtn&&unassignBtn.addEventListener("click",(()=>{!function(uuid){const notes=document.getElementById("equipment-notes").value.trim(),url=M.cfg.wwwroot+"/local/equipment/inventory/check_inout.php";fetch(url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({ajax:"1",action:"update_assignment",uuid:uuid,notes:notes,sesskey:M.cfg.sesskey})}).then((response=>response.json())).then((data=>{data.success?(showSuccessMessage("Equipment unassigned"),lookupEquipment(uuid)):showErrorMessage(data.message||"Unassignment failed")})).catch((error=>{Log.error("Unassignment error:",error),showErrorMessage("Network error occurred")}))}(item.uuid)}))}(item):function(item){const locationSelect=document.getElementById("location-select"),transferBtn=document.getElementById("transfer-location-btn"),url=M.cfg.wwwroot+"/local/equipment/inventory/check_inout.php";fetch(url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({ajax:"1",action:"get_locations",sesskey:M.cfg.sesskey})}).then((response=>response.json())).then((data=>{data.locations&&data.locations.forEach((location=>{const option=document.createElement("option");option.value=location.id,option.textContent=location.name,locationSelect.appendChild(option)}))})).catch((error=>{Log.error("Location loading error:",error)})),locationSelect&&locationSelect.addEventListener("change",(function(){transferBtn.disabled=!this.value}));transferBtn&&transferBtn.addEventListener("click",(()=>{const locationId=locationSelect.value,locationName=locationSelect.options[locationSelect.selectedIndex].text;locationId&&function(uuid,locationid,locationName){const notes=document.getElementById("equipment-notes").value.trim(),url=M.cfg.wwwroot+"/local/equipment/inventory/check_inout.php";fetch(url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({ajax:"1",action:"update_assignment",uuid:uuid,locationid:locationid,notes:notes,sesskey:M.cfg.sesskey})}).then((response=>response.json())).then((data=>{data.success?(showSuccessMessage("Equipment transferred to ".concat(locationName)),lookupEquipment(uuid)):showErrorMessage(data.message||"Transfer failed")})).catch((error=>{Log.error("Transfer error:",error),showErrorMessage("Network error occurred")}))}(item.uuid,locationId,locationName)}))}(item);const saveNotesBtn=document.getElementById("save-notes-btn"),notesTextarea=document.getElementById("equipment-notes");saveNotesBtn&&notesTextarea&&saveNotesBtn.addEventListener("click",(()=>{const notes=notesTextarea.value.trim();notes&&function(uuid,notes){const url=M.cfg.wwwroot+"/local/equipment/inventory/check_inout.php";fetch(url,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({ajax:"1",action:"update_notes",uuid:uuid,notes:notes,sesskey:M.cfg.sesskey})}).then((response=>response.json())).then((data=>{data.success?(showSuccessMessage("Notes saved successfully"),document.getElementById("equipment-notes").value=""):showErrorMessage(data.message||"Failed to save notes")})).catch((error=>{Log.error("Notes save error:",error),showErrorMessage("Network error occurred")}))}(item.uuid,notes)}))}(item)}function clearEquipmentDetails(){equipmentDetails.innerHTML='\n                <div class="alert alert-info">\n                    <i class="fa fa-info-circle me-2"></i>\n                    Scan a QR code or enter UUID manually to view equipment details and manage assignments.\n                </div>\n            ',currentEquipment=null}function showSuccessMessage(message){Notification.addNotification({message:message,type:"success"})}function showErrorMessage(message){Notification.addNotification({message:message,type:"error"})}document.querySelectorAll('input[name="assignment_mode"]').forEach((radio=>{radio.addEventListener("change",(function(){currentMode=this.value,Log.debug("Assignment mode changed to:",currentMode),currentEquipment&&displayEquipmentDetails(currentEquipment)}))})),lookupBtn&&lookupBtn.addEventListener("click",(()=>{const uuid=manualUuid.value.trim();uuid&&(lookupEquipment(uuid),manualUuid.value="")})),manualUuid&&manualUuid.addEventListener("keypress",(e=>{"Enter"===e.key&&lookupBtn.click()}))}return{init:()=>{Log.debug("local_equipment/check-inout-scanner: init() called"),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",initializeScanner):initializeScanner()}}}));

//# sourceMappingURL=check-inout-scanner.min.js.map