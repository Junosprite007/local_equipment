define("local_equipment/partnership_courses",["exports","core/log","core/str"],(function(_exports,_log,_str){var obj;
/**
   * JavaScript for managing consents.
   *
   * @module     local_equipment/partnership_courses
   * @copyright  2024 Joshua Kirby <josh@funlearningcompany.com>
   * @license    https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_log=(obj=_log)&&obj.__esModule?obj:{default:obj};_exports.init=()=>{const partnershipSelect=document.getElementById("id_partnership");if(!partnershipSelect)return void _log.default.error("Partnership select element not found");let partnershipData;try{partnershipData=JSON.parse(partnershipSelect.getAttribute("data-partnerships")||"{}")}catch(e){return void _log.default.error("Error parsing partnership data:",e)}const updateStudentCourses=async partnershipId=>{const courses=partnershipData[partnershipId]||[];_log.default.debug("Courses: "),_log.default.debug(courses);const selects=document.querySelectorAll('select[name^="student_courses["]');for(const select of selects)await updateCourseOptions(select,courses)},updateCourseOptions=async(select,courses)=>{const previouslySelected=JSON.parse(select.getAttribute("data-selected")||"[]");if(select.innerHTML="",0===courses.length){const noCourseString=await(0,_str.get_string)("nocoursesavailable","local_equipment"),option=document.createElement("option");option.value="",option.textContent=noCourseString,option.disabled=!0,select.appendChild(option)}else courses.forEach((course=>{const option=document.createElement("option");option.value=course.id,option.textContent=course.fullname,option.selected=previouslySelected.includes(course.id.toString()),select.appendChild(option)}));preserveSelectedCourses()},preserveSelectedCourses=()=>{document.querySelectorAll('select[name^="student_courses["]').forEach((select=>{select.addEventListener("change",(()=>{const selectedOptions=Array.from(select.selectedOptions).map((option=>option.value));select.setAttribute("data-selected",JSON.stringify(selectedOptions))}))}))};partnershipSelect.addEventListener("change",(event=>{updateStudentCourses(event.target.value)})),updateStudentCourses(partnershipSelect.value),preserveSelectedCourses()}}));

//# sourceMappingURL=partnership_courses.min.js.map