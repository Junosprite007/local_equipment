define("local_equipment/partnership_courses",["exports","core/str"],(function(_exports,_str){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;_exports.init=()=>{const partnershipSelect=document.getElementById("id_partnership"),selectedCoursesInput=document.getElementById("id_selectedcourses");if(!partnershipSelect||!selectedCoursesInput)return;const partnershipData=JSON.parse(partnershipSelect.getAttribute("data-partnerships")||"{}"),updateStudentCourses=async partnershipId=>{const courses=partnershipData[partnershipId]||[],selects=document.querySelectorAll('select[name^="student_courses["]');for(const select of selects)await updateCourseOptions(select,courses)},updateCourseOptions=async(select,courses)=>{const studentIndex=select.name.match(/\[(\d+)\]/)[1];select.setAttribute("data-student-index",studentIndex);const previouslySelected=JSON.parse(select.getAttribute("data-selected")||"[]");if(select.innerHTML="",0===courses.length){const noCourseString=await(0,_str.get_string)("nocoursesavailable","local_equipment");select.innerHTML='<option value="" disabled>'.concat(noCourseString,"</option>")}else courses.forEach((course=>{const option=document.createElement("option");option.value=course.id,option.textContent=course.fullname,option.selected=previouslySelected.includes(course.id.toString()),select.appendChild(option)}))},updateSelectedCourses=()=>{const allSelects=document.querySelectorAll('select[name^="student_courses["]'),selectedCourses={};allSelects.forEach((select=>{const studentIndex=select.getAttribute("data-student-index");selectedCourses[studentIndex]=Array.from(select.selectedOptions).map((option=>option.value))})),selectedCoursesInput.value=JSON.stringify(selectedCourses)};document.querySelectorAll('select[name^="student_courses["]').forEach((select=>{select.addEventListener("change",(()=>{select.setAttribute("data-selected",JSON.stringify(Array.from(select.selectedOptions).map((option=>option.value)))),updateSelectedCourses()}))}));const form=document.querySelector("form");form&&form.addEventListener("submit",updateSelectedCourses),partnershipSelect.addEventListener("change",(event=>{updateStudentCourses(event.target.value)})),updateStudentCourses(partnershipSelect.value),updateSelectedCourses()}}));

//# sourceMappingURL=partnership_courses.min.js.map