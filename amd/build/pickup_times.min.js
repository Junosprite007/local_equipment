define("local_equipment/pickup_times",["exports","core/log","core/str"],(function(_exports,_log,_str){var obj;
/**
   * JavaScript for getting pickup times based on selected pickup location.
   *
   * @module     local_equipment/pickup_times
   * @copyright  2024 Joshua Kirby <josh@funlearningcompany.com>
   * @license    https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_log=(obj=_log)&&obj.__esModule?obj:{default:obj};_exports.init=()=>{const pickupLocationSelect=document.getElementById("id_pickuplocation"),pickupTimeSelect=document.getElementById("id_pickuptime");if(!pickupLocationSelect||!pickupTimeSelect)return void _log.default.error("Pickup location or time select element not found");let pickupTimeData;try{pickupTimeData=JSON.parse(pickupLocationSelect.getAttribute("data-pickuptimes")||"{}")}catch(e){return void _log.default.error("Error parsing pickup time data:",e)}const updatePickupTimes=async locationId=>{const contactUsString=await(0,_str.get_string)("contactusforpickup","local_equipment");pickupTimeSelect.innerHTML='<option value="0">'.concat(contactUsString,"</option>");(pickupTimeData[locationId]||[]).forEach((time=>{const option=document.createElement("option");option.value=time.id,option.textContent=time.datetime,pickupTimeSelect.appendChild(option)}))};pickupLocationSelect.addEventListener("change",(event=>{updatePickupTimes(event.target.value)})),updatePickupTimes(pickupLocationSelect.value)}}));

//# sourceMappingURL=pickup_times.min.js.map