{"version":3,"file":"pickup_times.min.js","sources":["../src/pickup_times.js"],"sourcesContent":["// This file is part of FLIP Plugins for Moodle\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * JavaScript for getting pickup times based on selected pickup location.\n *\n * @module     local_equipment/pickup_times\n * @copyright  2024 Joshua Kirby <josh@funlearningcompany.com>\n * @license    https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Log from 'core/log';\nimport { get_string as getString } from 'core/str';\n\nexport const init = () => {\n    const pickupLocationSelect = document.getElementById('id_pickuplocation');\n    const pickupTimeSelect = document.getElementById('id_pickuptime');\n\n    if (!pickupLocationSelect || !pickupTimeSelect) {\n        Log.error('Pickup location or time select element not found');\n        return;\n    }\n\n    let pickupTimeData;\n    try {\n        pickupTimeData = JSON.parse(\n            pickupLocationSelect.getAttribute('data-pickuptimes') || '{}'\n        );\n    } catch (e) {\n        Log.error('Error parsing pickup time data:', e);\n        return;\n    }\n\n    const updatePickupTimes = async (locationId) => {\n        const contactUsString = await getString(\n            'contactusforpickup',\n            'local_equipment'\n        );\n        pickupTimeSelect.innerHTML = `<option value=\"0\">${contactUsString}</option>`;\n\n        const times = pickupTimeData[locationId] || [];\n        times.forEach((time) => {\n            const option = document.createElement('option');\n            option.value = time.id;\n            option.textContent = time.datetime;\n            pickupTimeSelect.appendChild(option);\n        });\n    };\n\n    pickupLocationSelect.addEventListener('change', (event) => {\n        updatePickupTimes(event.target.value);\n    });\n\n    // Initial update\n    updatePickupTimes(pickupLocationSelect.value);\n};\n"],"names":["pickupLocationSelect","document","getElementById","pickupTimeSelect","error","pickupTimeData","JSON","parse","getAttribute","e","updatePickupTimes","async","contactUsString","innerHTML","locationId","forEach","time","option","createElement","value","id","textContent","datetime","appendChild","addEventListener","event","target"],"mappings":";;;;;;;kJA0BoB,WACVA,qBAAuBC,SAASC,eAAe,qBAC/CC,iBAAmBF,SAASC,eAAe,qBAE5CF,uBAAyBG,0CACtBC,MAAM,wDAIVC,mBAEAA,eAAiBC,KAAKC,MAClBP,qBAAqBQ,aAAa,qBAAuB,MAE/D,MAAOC,4BACDL,MAAM,kCAAmCK,SAI3CC,kBAAoBC,MAAAA,mBAChBC,sBAAwB,mBAC1B,qBACA,mBAEJT,iBAAiBU,sCAAiCD,8BAEpCP,eAAeS,aAAe,IACtCC,SAASC,aACLC,OAAShB,SAASiB,cAAc,UACtCD,OAAOE,MAAQH,KAAKI,GACpBH,OAAOI,YAAcL,KAAKM,SAC1BnB,iBAAiBoB,YAAYN,YAIrCjB,qBAAqBwB,iBAAiB,UAAWC,QAC7Cf,kBAAkBe,MAAMC,OAAOP,UAInCT,kBAAkBV,qBAAqBmB"}